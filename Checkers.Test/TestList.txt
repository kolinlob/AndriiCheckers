== GAME
* can create game
* game can be initialised with checkers in start positions
* game checks, if a checker can move to that field
switches player after each move

=== GAME RULES
ordinary checker cannot move backwards
ordinary checker moves on one cell 
queen can move forwards and backwards
queen can move on more than one cell at once 
first move - from first row only
checker can take the opponent's checker
take - over one cell
take - opponent's checker is taken away from field
take - backwards is allowed
take - queen cab land in any cell after the beaten checker
take is mandatory
cannot move other checkers, if take is possible


 Game Over:
(50%) checks for winner (as of now only checks if no whites/blacks remained on the board)
checks for winner - when no moves left for opponent

== CELL
* can create cell
* check if cell is usable
* check if cell is empty

== BOARD
* can create board
!!! can display board
* board can display checker at its initial coordinates
* board checks, if cell is occupied

== CHECKER
* can create a checker
* checker property is corect
* checker can be moved according to the new coordinates
* checker can become queen
* checker changes its appearance, when becomes queen


== PLAYER
* player can select checker
* player can select only his own checker
? player can set cell coordinates for a checker to move

player can surrender

== MOVE
* can create move
can move ckecker